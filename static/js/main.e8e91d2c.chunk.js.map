{"version":3,"sources":["components/App/index.jsx","index.js"],"names":["App","useState","title","setTitle","count","setCount","countdownOn","isCountDownOn","minutes","Math","floor","toString","padStart","seconds","interval","useRef","handlerButtonReset","clearInterval","current","className","type","onClick","setInterval","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAGe,SAASA,IAAO,IAAD,EACFC,mBAAS,oFADP,mBACrBC,EADqB,KACdC,EADc,OAEFF,mBAAS,MAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGSJ,oBAAS,GAHlB,mBAGrBK,EAHqB,KAGRC,EAHQ,KAKtBC,EAAUC,KAAKC,MAAMN,EAAQ,IAAIO,WAAWC,SAAS,EAAG,GACxDC,GAAWT,EAAkB,GAAVI,GAAcG,WAAWC,SAAS,EAAG,GACxDE,EAAWC,iBAAO,MAElBC,EAAqB,WACzBC,cAAcH,EAASI,SACvBb,EAAS,MACTE,GAAc,GACdJ,EAAS,qFAoBX,OACE,sBAAKgB,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SACGjB,IAEH,sBAAKiB,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGX,IAEH,sBAAMW,UAAU,eAAhB,eAGA,sBAAMA,UAAU,gBAAhB,SACGN,OAGL,sBAAKM,UAAU,iBAAf,WACIb,GACA,wBACEa,UAAU,gBACVC,KAAK,SACLC,QAtCiB,WACzBd,GAAc,GACdO,EAASI,QAAUI,aAAY,WAC7BjB,GAAS,WAAgB,IAAfkB,EAAc,uDAAVnB,EACZ,OAAImB,GAAK,EAAUA,EAAI,EAChBP,SAER,KACHb,EAAS,gDA2BH,mBAQDG,GACC,wBACEa,UAAU,gBACVC,KAAK,SACLC,QApCgB,WACxBd,GAAc,GACdU,cAAcH,EAASI,SACvBf,EAAS,mHA8BH,kBAQF,wBACEgB,UAAU,gBACVC,KAAK,SACLC,QAASL,EAHX,yBClERQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e8e91d2c.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './index.css';\n\nexport default function App() {\n  const [title, setTitle] = useState('Начните отсчет!');\n  const [count, setCount] = useState(25 * 60);\n  const [countdownOn, isCountDownOn] = useState(false);\n\n  const minutes = Math.floor(count / 60).toString().padStart(2, 0);\n  const seconds = (count - minutes * 60).toString().padStart(2, 0);\n  const interval = useRef(null);\n\n  const handlerButtonReset = () => {\n    clearInterval(interval.current);\n    setCount(25 * 60);\n    isCountDownOn(false);\n    setTitle('Начните отсчет!');\n  };\n\n  const handlerButtonStart = () => {\n    isCountDownOn(true);\n    interval.current = setInterval(() => {\n      setCount((c = count) => {\n        if (c >= 1) return c - 1;\n        return handlerButtonReset();\n      });\n    }, 1000);\n    setTitle('Поехали!');\n  };\n\n  const handlerButtonStop = () => {\n    isCountDownOn(false);\n    clearInterval(interval.current);\n    setTitle('Не останавливайтесь!');\n  };\n\n  return (\n    <div className=\"timer__page\">\n      <h1 className=\"timer__title\">\n        {title}\n      </h1>\n      <div className=\"timer__numbers\">\n        <span className=\"timer__number\">\n          {minutes}\n        </span>\n        <span className=\"timer__colon\">\n          :\n        </span>\n        <span className=\"timer__number\">\n          {seconds}\n        </span>\n      </div>\n      <div className=\"timer__buttons\">\n        {!countdownOn && (\n          <button\n            className=\"timer__button\"\n            type=\"button\"\n            onClick={handlerButtonStart}\n          >\n            Start\n          </button>\n        )}\n        {countdownOn && (\n          <button\n            className=\"timer__button\"\n            type=\"button\"\n            onClick={handlerButtonStop}\n          >\n            Stop\n          </button>\n        )}\n        <button\n          className=\"timer__button\"\n          type=\"button\"\n          onClick={handlerButtonReset}\n        >\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}